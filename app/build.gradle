/*
 * Copyright 2017 Fantasy Fang
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'spoon'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        resConfig "zh"
        applicationId "com.fantasy1022.fancytrendapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }

    lintOptions {
        lintConfig file("$project.rootDir/tools/rules-lint.xml")
        htmlOutput file("$project.buildDir/outputs/lint/lint.html")
        abortOnError false
        warningsAsErrors true
        xmlReport false
    }
    flavorDimensions "product"
    productFlavors {
        prod {
            dimension "product"
        }
        mock {
            dimension "product"
            applicationIdSuffix ".mock"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "FancyTrendView_Production-V" + defaultConfig.versionName + "-build#" + defaultConfig.versionCode + ".apk"
//            output.outputFile = new File(
//                    output.outputFile.parent,
//                    output.outputFile.name.replace("app-prod-release.apk", "FancyTrendView_Production-V" + defaultConfig.versionName + "-build#" + defaultConfig.versionCode + ".apk"))
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

spoon {
    debug = true;
    // To grant permissions to Android M >= devices */
    grantAllPermissions = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':library')
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    compile "com.android.support:transition:$rootProject.supportLibraryVersion"

    //Retrofit2
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.rxJava2AdapterVersion"

    //RxJava2
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxJava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"

    //OKhttp3
    compile "com.squareup.okhttp3:okhttp:$rootProject.okhttp3Version"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3Version"
    compile "com.squareup.okhttp3:mockwebserver:$rootProject.okhttp3Version"

    compile "com.google.code.gson:gson:$rootProject.gsonVersion"

    //Tool
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    //UI
    compile "com.afollestad.material-dialogs:core:$rootProject.materialDialogsVersion"

    //Dependencies for JUNit and unit tests.
    testCompile "junit:junit:$rootProject.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    //2.7.11 is the newest version
    testCompile("org.powermock:powermock-module-junit4:$rootProject.powerMockito")
    testCompile("org.powermock:powermock-api-mockito:$rootProject.powerMockito")

    //Dependencies for Espresso
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion") {
        exclude group: 'com.android.support'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
    }

    // Android JUnit Runner
    androidTestCompile("com.android.support.test:runner:$rootProject.runnerVersion") {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    // JUnit4 Rules
    androidTestCompile("com.android.support.test:rules:$rootProject.rulesVersion") {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }

    //Spoon
    androidTestCompile "com.jraska:falcon-spoon-compat:$rootProject.spoonCompactVersion"

    // UiAutomator
    androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:$rootProject.uiautomatorVersion"

    //Leakcanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"


}
